/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 11-Jan-2020 11:08:19 AM 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

USE [ApartmentManagement]
GO

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Building_Complex]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Building] DROP CONSTRAINT [FK_Building_Complex]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_LeaveRequest_Staff]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [LeaveRequest] DROP CONSTRAINT [FK_LeaveRequest_Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Login_Staff]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Login] DROP CONSTRAINT [FK_Login_Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Notice_Staff]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Notice] DROP CONSTRAINT [FK_Notice_Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_NoticeReceiver_Notice]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [NoticeReceiver] DROP CONSTRAINT [FK_NoticeReceiver_Notice]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_NoticeReceiver_Staff]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [NoticeReceiver] DROP CONSTRAINT [FK_NoticeReceiver_Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Schedule_Staff]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Schedule] DROP CONSTRAINT [FK_Schedule_Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Staff_Complex]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Staff] DROP CONSTRAINT [FK_Staff_Complex]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Staff_Department]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Staff] DROP CONSTRAINT [FK_Staff_Department]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_StaffVacation_Staff]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [StaffVacation] DROP CONSTRAINT [FK_StaffVacation_Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Task_Building]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Task] DROP CONSTRAINT [FK_Task_Building]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Task_Complex]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Task] DROP CONSTRAINT [FK_Task_Complex]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_TaskStaff_Staff]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [TaskStaff] DROP CONSTRAINT [FK_TaskStaff_Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_TaskStaff_Task]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [TaskStaff] DROP CONSTRAINT [FK_TaskStaff_Task]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Building]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Building]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Complex]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Complex]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Department]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Department]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[LeaveRequest]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [LeaveRequest]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Login]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Login]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Notice]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Notice]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[NoticeReceiver]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [NoticeReceiver]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Schedule]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Schedule]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Staff]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Staff]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[StaffVacation]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [StaffVacation]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Task]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Task]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[TaskStaff]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [TaskStaff]
GO

/* Create Tables */

CREATE TABLE [Building]
(
	[buildingId] smallint NOT NULL IDENTITY (1, 1),
	[complexId] smallint NOT NULL,
	[noStaffs] smallint NOT NULL,
	[noTenants] int NOT NULL,
	[noApartments] smallint NOT NULL,
	[availApartments] smallint NOT NULL
)
GO

CREATE TABLE [Complex]
(
	[complexId] smallint NOT NULL IDENTITY (1, 1),
	[name] nvarchar(50) NOT NULL,
	[address] nvarchar(100) NOT NULL,
	[city] nvarchar(50) NOT NULL,
	[noBuildings] smallint NOT NULL,
	[contactNumber] nvarchar(10) NOT NULL
)
GO

CREATE TABLE [Department]
(
	[departmentId] smallint NOT NULL IDENTITY (1, 1),
	[name] nvarchar(50) NULL,
	[managerId] int NULL
)
GO

CREATE TABLE [LeaveRequest]
(
	[leaveRequestId] int NOT NULL,
	[staffId] int NOT NULL,
	[leaveDate] date NOT NULL,
	[type] tinyint NOT NULL,
	[confirmStatus] tinyint NOT NULL DEFAULT 0,
	[leaveReason] varchar(200) NOT NULL
)
GO

CREATE TABLE [Login]
(
	[staffId] int NOT NULL,
	[username] nvarchar(50) NOT NULL,
	[password] binary(64) NOT NULL,
	[salt] uniqueidentifier NOT NULL
)
GO

CREATE TABLE [Notice]
(
	[noticeId] int NOT NULL IDENTITY (1, 1),
	[senderId] int NOT NULL,
	[sendDate] datetime NOT NULL,
	[message] nvarchar(200) NOT NULL
)
GO

CREATE TABLE [NoticeReceiver]
(
	[nrId] int NOT NULL IDENTITY (1, 1),
	[noticeId] int NOT NULL,
	[receiverId] int NOT NULL,
	[isRead] bit NOT NULL DEFAULT 0
)
GO

CREATE TABLE [Schedule]
(
	[scheduleId] int NOT NULL IDENTITY (1, 1),
	[staffId] int NOT NULL,
	[wordDate] date NOT NULL,
	[startWorkHour] time(7) NOT NULL,
	[endWorkHour] time(7) NOT NULL,
	[isHoliday] bit NOT NULL DEFAULT 0,
	[isWeekend] bit NOT NULL DEFAULT 0
)
GO

CREATE TABLE [Staff]
(
	[staffId] int NOT NULL IDENTITY (1, 1),
	[departmentId] smallint NOT NULL,
	[complexId] smallint NOT NULL,
	[name] varchar(100) NOT NULL,
	[birthday] date NOT NULL,
	[address] nvarchar(100) NOT NULL,
	[city] nvarchar(50) NOT NULL,
	[mobile] nvarchar(10) NOT NULL,
	[joinDate] date NOT NULL,
	[leaveDate] date NULL,
	[isManager] bit NOT NULL DEFAULT 0
)
GO

CREATE TABLE [StaffVacation]
(
	[staffVacationId] int NOT NULL IDENTITY (1, 1),
	[staffId] int NOT NULL,
	[maxVacationDay] tinyint NULL,
	[usedDay] tinyint NULL
)
GO

CREATE TABLE [Task]
(
	[taskId] int NOT NULL IDENTITY (1, 1),
	[taskName] nvarchar(50) NOT NULL,
	[taskType] smallint NOT NULL,
	[taskStatus] smallint NOT NULL DEFAULT 0,
	[priority] smallint NOT NULL DEFAULT 1,
	[complexId] smallint NOT NULL,
	[buildingId] smallint NOT NULL,
	[startDate] datetime NOT NULL,
	[endDate] datetime NULL,
	[description] nvarchar(200) NOT NULL,
	[cost] money NOT NULL DEFAULT 0
)
GO

CREATE TABLE [TaskStaff]
(
	[taskId] int NOT NULL,
	[staffId] int NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Building] 
 ADD CONSTRAINT [PK_Building]
	PRIMARY KEY CLUSTERED ([buildingId] ASC)
GO

ALTER TABLE [Complex] 
 ADD CONSTRAINT [PK_Complex]
	PRIMARY KEY CLUSTERED ([complexId] ASC)
GO

ALTER TABLE [Department] 
 ADD CONSTRAINT [PK_Department]
	PRIMARY KEY CLUSTERED ([departmentId] ASC)
GO

ALTER TABLE [LeaveRequest] 
 ADD CONSTRAINT [PK_LeaveRequest]
	PRIMARY KEY CLUSTERED ([leaveRequestId] ASC)
GO

ALTER TABLE [Login] 
 ADD CONSTRAINT [PK_Login]
	PRIMARY KEY CLUSTERED ([staffId] ASC)
GO

ALTER TABLE [Login] 
 ADD CONSTRAINT [UQ_Login] UNIQUE NONCLUSTERED ([staffId] ASC)
GO

ALTER TABLE [Notice] 
 ADD CONSTRAINT [PK_Notice]
	PRIMARY KEY CLUSTERED ([noticeId] ASC)
GO

ALTER TABLE [NoticeReceiver] 
 ADD CONSTRAINT [PK_NoticeReceiver]
	PRIMARY KEY CLUSTERED ([nrId] ASC)
GO

ALTER TABLE [Schedule] 
 ADD CONSTRAINT [PK_Schedule]
	PRIMARY KEY CLUSTERED ([scheduleId] ASC)
GO

ALTER TABLE [Staff] 
 ADD CONSTRAINT [PK_Staff]
	PRIMARY KEY CLUSTERED ([staffId] ASC)
GO

ALTER TABLE [StaffVacation] 
 ADD CONSTRAINT [PK_StaffVacation]
	PRIMARY KEY CLUSTERED ([staffVacationId] ASC)
GO

ALTER TABLE [Task] 
 ADD CONSTRAINT [PK_Task]
	PRIMARY KEY CLUSTERED ([taskId] ASC)
GO

ALTER TABLE [TaskStaff] 
 ADD CONSTRAINT [PK_TaskStaff]
	PRIMARY KEY CLUSTERED ([taskId] ASC,[staffId] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Building] ADD CONSTRAINT [FK_Building_Complex]
	FOREIGN KEY ([complexId]) REFERENCES [Complex] ([complexId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [LeaveRequest] ADD CONSTRAINT [FK_LeaveRequest_Staff]
	FOREIGN KEY ([staffId]) REFERENCES [Staff] ([staffId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Login] ADD CONSTRAINT [FK_Login_Staff]
	FOREIGN KEY ([staffId]) REFERENCES [Staff] ([staffId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Notice] ADD CONSTRAINT [FK_Notice_Staff]
	FOREIGN KEY ([senderId]) REFERENCES [Staff] ([staffId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [NoticeReceiver] ADD CONSTRAINT [FK_NoticeReceiver_Notice]
	FOREIGN KEY ([noticeId]) REFERENCES [Notice] ([noticeId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [NoticeReceiver] ADD CONSTRAINT [FK_NoticeReceiver_Staff]
	FOREIGN KEY ([receiverId]) REFERENCES [Staff] ([staffId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Schedule] ADD CONSTRAINT [FK_Schedule_Staff]
	FOREIGN KEY ([staffId]) REFERENCES [Staff] ([staffId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Staff] ADD CONSTRAINT [FK_Staff_Complex]
	FOREIGN KEY ([complexId]) REFERENCES [Complex] ([complexId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Staff] ADD CONSTRAINT [FK_Staff_Department]
	FOREIGN KEY ([departmentId]) REFERENCES [Department] ([departmentId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [StaffVacation] ADD CONSTRAINT [FK_StaffVacation_Staff]
	FOREIGN KEY ([staffId]) REFERENCES [Staff] ([staffId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Task] ADD CONSTRAINT [FK_Task_Building]
	FOREIGN KEY ([buildingId]) REFERENCES [Building] ([buildingId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Task] ADD CONSTRAINT [FK_Task_Complex]
	FOREIGN KEY ([complexId]) REFERENCES [Complex] ([complexId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [TaskStaff] ADD CONSTRAINT [FK_TaskStaff_Staff]
	FOREIGN KEY ([staffId]) REFERENCES [Staff] ([staffId]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [TaskStaff] ADD CONSTRAINT [FK_TaskStaff_Task]
	FOREIGN KEY ([taskId]) REFERENCES [Task] ([taskId]) ON DELETE No Action ON UPDATE No Action
GO
